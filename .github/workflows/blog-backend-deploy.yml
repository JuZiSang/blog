name: BlogBackEndDeploy

on:
  push:
    branches:
      - master
      - test
    paths:
      - 'server/**'
      - '.github/workflows/blog-backend-deploy.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./server
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get NPM Cache Directory Path
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Nest Cli 
      run: npm install @nestjs/cli -g

    - name: Install Dependencies
      run: npm install

    - name: Build Server
      run: npm run build

    - name: Clear mode_modules
      run: rm -rf ./node_modules
  
    - name: Docker meta
      id: meta
      uses: crazy-max/ghaction-docker-meta@v2
      with:
        images: juzisang/blog-back-end
        flavor: |
          latest=true
        tags: |
          type=sha,priority=1000,prefix=sha-,suffix=
   
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
   
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with: 
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./server
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=registry,ref=juzisang/blog-back-end:latest
        cache-to: type=inline

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Deploy Prod Server
      uses: garygrossgarten/github-action-ssh@release
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER_NAME }}
        privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
        command: |
          sed -i 's/blog-back-end:sha-[0-9a-z]\{7\}/blog-back-end:${{ steps.meta.outputs.version }}/' ./sites-manage/blog-nodejs-compose.yml
          sudo docker stack deploy -c ./sites-manage/blog-nodejs-compose.yml blog_nodejs

    - if: ${{ github.ref == 'refs/heads/test' }}
      name: Deploy Test Server
      uses: garygrossgarten/github-action-ssh@release
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER_NAME }}
        privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
        command: |
          sed -i 's/blog-back-end:sha-[0-9a-z]\{7\}/blog-back-end:${{ steps.meta.outputs.version }}/' ./sites-manage/blog-nodejs-test-compose.yml
          sudo docker stack deploy -c ./sites-manage/blog-nodejs-test-compose.yml blog_nodejs_test

    - if: ${{ github.ref == 'refs/heads/master' && success() }}
      name: ServerMasterPushMessage
      uses: yakumioto/serverchan-action@v2
      with:
        key: ${{ secrets.SERVERCHAN_KEY  }}
        text: Blog服务端部署到线上环境成功
        desp: 版本号：blog-back-end:${{ steps.meta.outputs.version }}
        
    - if: ${{ github.ref == 'refs/heads/test' && success() }}
      name: ServerTestPushMessage
      uses: yakumioto/serverchan-action@v2
      with:
        key: ${{ secrets.SERVERCHAN_KEY  }}
        text: Blog服务端部署到测试环境成功
        desp: 版本号：blog-back-end:${{ steps.meta.outputs.version }}